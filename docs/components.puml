@startuml componenets
title Диаграмма компонент контейнера обработки клиентского протокола управления устройствами "Теплый дом" и его окружением

top to bottom direction

!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

Container_Boundary(SmartHome, "") {
  Container(Gateway, "API Gateway", "Kusk", "Единый шлюз для клиентского трафика")

  ContainerQueue(Kafka, "Брокер сообщений", "Kafka", "Хранит задания по расписанию для выполнения и телеметрию с девайсов")

  Container_Boundary(DeviceManagementClientCnt, "Обработка клиентских запросов") {
    Container(DeviceManagementRequestHandler, "Обработчик клиентских запросов", "Java Sprint Framework", "Реализует весь REST API по взаимодействию с устройствами")        
    ContainerDb(DeviceManagementCache, "Кеш обработчика клиентских запросов", "Redis", "Хранит готовые ответы клиентам в соответствии с настроенным ttl")        
    Container(DeviceManagementTelemetryExtractor, "Клиент для чтения и обработки телеметрии устройств", "Java", "Общается с Kafka, по запросу от клиента извлекает и подготавливает для отправки данные телеметрии")
    ContainerDb(DeviceManagementDb, "База данных устройств", "PostgreSQL", "Хранит данные устройств")
    Container(DeviceManagementTaskPublisher, "Клиент для публикации задач", "Java", "Публикация задач устройств для исполнения")
    
    Rel(DeviceManagementRequestHandler, DeviceManagementDb,  "Чтение\запись", "tcp")
    Rel(Gateway, DeviceManagementRequestHandler, "Маршрутизация запросов управления устройствами", "https")
    Rel(DeviceManagementRequestHandler, DeviceManagementCache,  "чтение\запись", "tcp Redis")
    Rel(DeviceManagementRequestHandler, DeviceManagementTelemetryExtractor,  "запрос данных телеметрии", "https")
    Rel(DeviceManagementRequestHandler, DeviceManagementTaskPublisher,  "публикация", "https")
  }
}

Rel(DeviceManagementTaskPublisher, Kafka, "Создание задач для управления устройствами", "tcp")
Rel(DeviceManagementTelemetryExtractor, Kafka, "Чтение телеметрии", "tcp")

@enduml